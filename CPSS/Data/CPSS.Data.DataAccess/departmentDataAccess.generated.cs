//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using CPSS.Common.Core.DataAccess.DataAccess;
using CPSS.Data.DataAccess.Interfaces;
using CPSS.Data.DataAcess.DataModels;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// department的数据访问层
    /// </summary>
	public partial class departmentDataAccess : GenericDataAccessBase<departmentDataModel>, IdepartmentDataAccess
	{
		/// <summary>
		/// 构造函数
		/// </summary>
		public departmentDataAccess(IDbConnection connection) : base(connection)
        {
        }

		/// <summary>
		/// 根据编号获取department
		/// </summary>
		public departmentDataModel GetdepartmentDataModelById(int depid)
		{
			this.ExecuteSQL = @"SELECT depid,classid,parentid,childnumber,childcount,serialnumber,name,pinyin,status,deleted,sort,comment From department  WHERE  depid = @depid ";
			this.DataParameter = new DbParameter[]
			{
				new SqlParameter("@depid", depid),
			};
            return this.ExecuteReadSqlTodepartmentDataModel();
		}

		/// <summary>
		/// 新增
		/// </summary>
		public int Add(departmentDataModel data, IDbTransaction tansaction)
	    {
            this.ExecuteSQL = @"INSERT INTO [department] ([classid],[parentid],[childnumber],[childcount],[serialnumber],[name],[pinyin],[status],[deleted],[sort],[comment]) VALUES (@classid,@parentid,@childnumber,@childcount,@serialnumber,@name,@pinyin,@status,@deleted,@sort,@comment) 
 SELECT SCOPE_IDENTITY()";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@classid", data.classid),
                new SqlParameter("@parentid", data.parentid),
                new SqlParameter("@childnumber", data.childnumber),
                new SqlParameter("@childcount", data.childcount),
                new SqlParameter("@serialnumber", data.serialnumber),
                new SqlParameter("@name", data.name),
                new SqlParameter("@pinyin", data.pinyin),
                new SqlParameter("@status", data.status),
                new SqlParameter("@deleted", data.deleted),
                new SqlParameter("@sort", data.sort),
                new SqlParameter("@comment", data.comment),
            };
	        return this.ExecuteNonQuery(tansaction, false);
	    }

		/// <summary>
		/// 新增
		/// </summary>
		public override int Add(departmentDataModel data)
	    {
			return this.Add(data, null);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public int Update(departmentDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"UPDATE department SET  [classid] = @classid, [parentid] = @parentid, [childnumber] = @childnumber, [childcount] = @childcount, [serialnumber] = @serialnumber, [name] = @name, [pinyin] = @pinyin, [status] = @status, [deleted] = @deleted, [sort] = @sort, [comment] = @comment WHERE  [depid] = @depid ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@depid", data.depid),
                new SqlParameter("@classid", data.classid),
                new SqlParameter("@parentid", data.parentid),
                new SqlParameter("@childnumber", data.childnumber),
                new SqlParameter("@childcount", data.childcount),
                new SqlParameter("@serialnumber", data.serialnumber),
                new SqlParameter("@name", data.name),
                new SqlParameter("@pinyin", data.pinyin),
                new SqlParameter("@status", data.status),
                new SqlParameter("@deleted", data.deleted),
                new SqlParameter("@sort", data.sort),
                new SqlParameter("@comment", data.comment),
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public override int Update(departmentDataModel data)
	    {
			return this.Update(data, null);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public int Delete(departmentDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"DELETE FROM department WHERE  [depid] = @depid ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@depid", data.depid),
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public override int Delete(departmentDataModel data)
	    {
			return this.Delete(data, null);
	    }
	    
	}
}
