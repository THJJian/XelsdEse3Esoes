//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using CPSS.Common.Core.DataAccess.DataAccess;
using CPSS.Data.DataAccess.Interfaces;
using CPSS.Data.DataAcess.DataModels;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// snstorage的数据访问层
    /// </summary>
	public partial class snstorageDataAccess : GenericDataAccessBase<snstorageDataModel>, IsnstorageDataAccess
	{
		/// <summary>
		/// 构造函数
		/// </summary>
		public snstorageDataAccess(IDbConnection connection) : base(connection)
        {
        }

		/// <summary>
		/// 根据编号获取snstorage
		/// </summary>
		public snstorageDataModel GetsnstorageDataModelById(string sn, int subcomid, int stoid, int clientid, int empid, int depid, int proid, int billtype, int billid, System.DateTime ctime)
		{
			this.ExecuteSQL = @"SELECT sn,subcomid,stoid,clientid,empid,depid,proid,billtype,billid,costprice,ctime,makedate,validdate,deleted From snstorage  WHERE  sn = @sn AND subcomid = @subcomid AND stoid = @stoid AND clientid = @clientid AND empid = @empid AND depid = @depid AND proid = @proid AND billtype = @billtype AND billid = @billid AND ctime = @ctime ";
			this.DataParameter = new DbParameter[]
			{
				new SqlParameter("@sn", sn),
				new SqlParameter("@subcomid", subcomid),
				new SqlParameter("@stoid", stoid),
				new SqlParameter("@clientid", clientid),
				new SqlParameter("@empid", empid),
				new SqlParameter("@depid", depid),
				new SqlParameter("@proid", proid),
				new SqlParameter("@billtype", billtype),
				new SqlParameter("@billid", billid),
				new SqlParameter("@ctime", ctime),
			};
            return this.ExecuteReadSqlTosnstorageDataModel();
		}

		/// <summary>
		/// 新增
		/// </summary>
		public int Add(snstorageDataModel data, IDbTransaction tansaction)
	    {
            this.ExecuteSQL = @"INSERT INTO [snstorage] ([sn],[subcomid],[stoid],[clientid],[empid],[depid],[proid],[billtype],[billid],[costprice],[ctime],[makedate],[validdate],[deleted]) VALUES (@sn,@subcomid,@stoid,@clientid,@empid,@depid,@proid,@billtype,@billid,@costprice,@ctime,@makedate,@validdate,@deleted) 
 SELECT SCOPE_IDENTITY()";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@sn", data.sn),
                new SqlParameter("@subcomid", data.subcomid),
                new SqlParameter("@stoid", data.stoid),
                new SqlParameter("@clientid", data.clientid),
                new SqlParameter("@empid", data.empid),
                new SqlParameter("@depid", data.depid),
                new SqlParameter("@proid", data.proid),
                new SqlParameter("@billtype", data.billtype),
                new SqlParameter("@billid", data.billid),
                new SqlParameter("@costprice", data.costprice),
                new SqlParameter("@ctime", data.ctime),
                new SqlParameter("@makedate", data.makedate),
                new SqlParameter("@validdate", data.validdate),
                new SqlParameter("@deleted", data.deleted),
            };
	        return this.ExecuteNonQuery(tansaction, false);
	    }

		/// <summary>
		/// 新增
		/// </summary>
		public override int Add(snstorageDataModel data)
	    {
			return this.Add(data, null);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public int Update(snstorageDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"UPDATE snstorage SET  [costprice] = @costprice, [makedate] = @makedate, [validdate] = @validdate, [deleted] = @deleted WHERE  [sn] = @sn AND [subcomid] = @subcomid AND [stoid] = @stoid AND [clientid] = @clientid AND [empid] = @empid AND [depid] = @depid AND [proid] = @proid AND [billtype] = @billtype AND [billid] = @billid AND [ctime] = @ctime ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@sn", data.sn),
                new SqlParameter("@subcomid", data.subcomid),
                new SqlParameter("@stoid", data.stoid),
                new SqlParameter("@clientid", data.clientid),
                new SqlParameter("@empid", data.empid),
                new SqlParameter("@depid", data.depid),
                new SqlParameter("@proid", data.proid),
                new SqlParameter("@billtype", data.billtype),
                new SqlParameter("@billid", data.billid),
                new SqlParameter("@costprice", data.costprice),
                new SqlParameter("@ctime", data.ctime),
                new SqlParameter("@makedate", data.makedate),
                new SqlParameter("@validdate", data.validdate),
                new SqlParameter("@deleted", data.deleted),
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public override int Update(snstorageDataModel data)
	    {
			return this.Update(data, null);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public int Delete(snstorageDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"DELETE FROM snstorage WHERE  [sn] = @sn AND [subcomid] = @subcomid AND [stoid] = @stoid AND [clientid] = @clientid AND [empid] = @empid AND [depid] = @depid AND [proid] = @proid AND [billtype] = @billtype AND [billid] = @billid AND [ctime] = @ctime ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@sn", data.sn),
                new SqlParameter("@subcomid", data.subcomid),
                new SqlParameter("@stoid", data.stoid),
                new SqlParameter("@clientid", data.clientid),
                new SqlParameter("@empid", data.empid),
                new SqlParameter("@depid", data.depid),
                new SqlParameter("@proid", data.proid),
                new SqlParameter("@billtype", data.billtype),
                new SqlParameter("@billid", data.billid),
                new SqlParameter("@ctime", data.ctime),
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public override int Delete(snstorageDataModel data)
	    {
			return this.Delete(data, null);
	    }
	    
	}
}
