//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using CPSS.Common.Core.DataAccess;
using CPSS.Data.DataAccess.Interfaces;
using CPSS.Data.DataAcess.DataModels;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// Company的数据访问层
    /// </summary>
	public partial class CompanyDataAccess : GenericDataAccessBase<CompanyDataModel>, ICompanyDataAccess
	{
		/// <summary>
		/// 构造函数
		/// </summary>
		public CompanyDataAccess(IDbConnection connection) : base(connection)
        {
        }

		/// <summary>
		/// 根据编号获取Company
		/// </summary>
		public CompanyDataModel GetCompanyDataModelById(int company_id)
		{
			this.ExecuteSQL = @"SELECT company_id,class_id,parent_id,child_number,child_count,serial_number,name,deleted,bank,opaddress,communicateaddr,postcode,tel,manager,email,comment,StartUse,prefix,sklimit,pricemode,pinyin,ModifyDate,RowIndex,Area_ID,businessStyle From Company  WHERE  company_id = @company_id ";
			this.DataParameter = new DbParameter[]
			{
				new SqlParameter("@company_id", company_id),                 
			};
            return this.ExecuteReadSqlToCompanyDataModel();
		}

		/// <summary>
		/// 新增
		/// </summary>
		public int Add(CompanyDataModel data, IDbTransaction tansaction)
	    {
            this.ExecuteSQL = @"INSERT INTO [Company] ([class_id],[parent_id],[child_number],[child_count],[serial_number],[name],[deleted],[bank],[opaddress],[communicateaddr],[postcode],[tel],[manager],[email],[comment],[StartUse],[prefix],[sklimit],[pricemode],[pinyin],[ModifyDate],[RowIndex],[Area_ID],[businessStyle]) VALUES (@class_id,@parent_id,@child_number,@child_count,@serial_number,@name,@deleted,@bank,@opaddress,@communicateaddr,@postcode,@tel,@manager,@email,@comment,@StartUse,@prefix,@sklimit,@pricemode,@pinyin,@ModifyDate,@RowIndex,@Area_ID,@businessStyle) 
 SELECT SCOPE_IDENTITY()";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@class_id", data.class_id),                 
                new SqlParameter("@parent_id", data.parent_id),                 
                new SqlParameter("@child_number", data.child_number),                 
                new SqlParameter("@child_count", data.child_count),                 
                new SqlParameter("@serial_number", data.serial_number),                 
                new SqlParameter("@name", data.name),                 
                new SqlParameter("@deleted", data.deleted),                 
                new SqlParameter("@bank", data.bank),                 
                new SqlParameter("@opaddress", data.opaddress),                 
                new SqlParameter("@communicateaddr", data.communicateaddr),                 
                new SqlParameter("@postcode", data.postcode),                 
                new SqlParameter("@tel", data.tel),                 
                new SqlParameter("@manager", data.manager),                 
                new SqlParameter("@email", data.email),                 
                new SqlParameter("@comment", data.comment),                 
                new SqlParameter("@StartUse", data.StartUse),                 
                new SqlParameter("@prefix", data.prefix),                 
                new SqlParameter("@sklimit", data.sklimit),                 
                new SqlParameter("@pricemode", data.pricemode),                 
                new SqlParameter("@pinyin", data.pinyin),                 
                new SqlParameter("@ModifyDate", data.ModifyDate),                 
                new SqlParameter("@RowIndex", data.RowIndex),                 
                new SqlParameter("@Area_ID", data.Area_ID),                 
                new SqlParameter("@businessStyle", data.businessStyle),                 
            };
	        return this.ExecuteNonQuery(tansaction, false);
	    }

		/// <summary>
		/// 新增
		/// </summary>
		public override int Add(CompanyDataModel data)
	    {
			return this.Add(data, null);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public int Update(CompanyDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"UPDATE Company SET  [class_id] = @class_id, [parent_id] = @parent_id, [child_number] = @child_number, [child_count] = @child_count, [serial_number] = @serial_number, [name] = @name, [deleted] = @deleted, [bank] = @bank, [opaddress] = @opaddress, [communicateaddr] = @communicateaddr, [postcode] = @postcode, [tel] = @tel, [manager] = @manager, [email] = @email, [comment] = @comment, [StartUse] = @StartUse, [prefix] = @prefix, [sklimit] = @sklimit, [pricemode] = @pricemode, [pinyin] = @pinyin, [ModifyDate] = @ModifyDate, [RowIndex] = @RowIndex, [Area_ID] = @Area_ID, [businessStyle] = @businessStyle WHERE  [company_id] = @company_id ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@company_id", data.company_id),                 
                new SqlParameter("@class_id", data.class_id),                 
                new SqlParameter("@parent_id", data.parent_id),                 
                new SqlParameter("@child_number", data.child_number),                 
                new SqlParameter("@child_count", data.child_count),                 
                new SqlParameter("@serial_number", data.serial_number),                 
                new SqlParameter("@name", data.name),                 
                new SqlParameter("@deleted", data.deleted),                 
                new SqlParameter("@bank", data.bank),                 
                new SqlParameter("@opaddress", data.opaddress),                 
                new SqlParameter("@communicateaddr", data.communicateaddr),                 
                new SqlParameter("@postcode", data.postcode),                 
                new SqlParameter("@tel", data.tel),                 
                new SqlParameter("@manager", data.manager),                 
                new SqlParameter("@email", data.email),                 
                new SqlParameter("@comment", data.comment),                 
                new SqlParameter("@StartUse", data.StartUse),                 
                new SqlParameter("@prefix", data.prefix),                 
                new SqlParameter("@sklimit", data.sklimit),                 
                new SqlParameter("@pricemode", data.pricemode),                 
                new SqlParameter("@pinyin", data.pinyin),                 
                new SqlParameter("@ModifyDate", data.ModifyDate),                 
                new SqlParameter("@RowIndex", data.RowIndex),                 
                new SqlParameter("@Area_ID", data.Area_ID),                 
                new SqlParameter("@businessStyle", data.businessStyle),                 
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public override int Update(CompanyDataModel data)
	    {
			return this.Update(data, null);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public int Delete(CompanyDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"DELETE FROM Company WHERE  [company_id] = @company_id ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@company_id", data.company_id),                 
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public override int Delete(CompanyDataModel data)
	    {
			return this.Delete(data, null);
	    }
	    
	}
}
