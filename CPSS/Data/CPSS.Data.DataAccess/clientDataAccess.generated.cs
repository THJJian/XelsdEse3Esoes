//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using CPSS.Common.Core.DataAccess.DataAccess;
using CPSS.Data.DataAccess.Interfaces;
using CPSS.Data.DataAcess.DataModels;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// client的数据访问层
    /// </summary>
	public partial class clientDataAccess : GenericDataAccessBase<clientDataModel>, IclientDataAccess
	{
		/// <summary>
		/// 构造函数
		/// </summary>
		public clientDataAccess(IDbConnection connection) : base(connection)
        {
        }

		/// <summary>
		/// 根据编号获取client
		/// </summary>
		public clientDataModel GetclientDataModelById(int clientid)
		{
			this.ExecuteSQL = @"SELECT clientid,classid,parentid,childnumber,childcount,serialnumber,name,pinyin,alias,address,zipcode,linkman,linktel,linkaddress,credits,pricemode,comment,status,sort,modifydate From client  WHERE  clientid = @clientid ";
			this.DataParameter = new DbParameter[]
			{
				new SqlParameter("@clientid", clientid),                 
			};
            return this.ExecuteReadSqlToclientDataModel();
		}

		/// <summary>
		/// 新增
		/// </summary>
		public int Add(clientDataModel data, IDbTransaction tansaction)
	    {
            this.ExecuteSQL = @"INSERT INTO [client] ([classid],[parentid],[childnumber],[childcount],[serialnumber],[name],[pinyin],[alias],[address],[zipcode],[linkman],[linktel],[linkaddress],[credits],[pricemode],[comment],[status],[sort],[modifydate]) VALUES (@classid,@parentid,@childnumber,@childcount,@serialnumber,@name,@pinyin,@alias,@address,@zipcode,@linkman,@linktel,@linkaddress,@credits,@pricemode,@comment,@status,@sort,@modifydate) 
 SELECT SCOPE_IDENTITY()";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@classid", data.classid),                 
                new SqlParameter("@parentid", data.parentid),                 
                new SqlParameter("@childnumber", data.childnumber),                 
                new SqlParameter("@childcount", data.childcount),                 
                new SqlParameter("@serialnumber", data.serialnumber),                 
                new SqlParameter("@name", data.name),                 
                new SqlParameter("@pinyin", data.pinyin),                 
                new SqlParameter("@alias", data.alias),                 
                new SqlParameter("@address", data.address),                 
                new SqlParameter("@zipcode", data.zipcode),                 
                new SqlParameter("@linkman", data.linkman),                 
                new SqlParameter("@linktel", data.linktel),                 
                new SqlParameter("@linkaddress", data.linkaddress),                 
                new SqlParameter("@credits", data.credits),                 
                new SqlParameter("@pricemode", data.pricemode),                 
                new SqlParameter("@comment", data.comment),                 
                new SqlParameter("@status", data.status),                 
                new SqlParameter("@sort", data.sort),                 
                new SqlParameter("@modifydate", data.modifydate),                 
            };
	        return this.ExecuteNonQuery(tansaction, false);
	    }

		/// <summary>
		/// 新增
		/// </summary>
		public override int Add(clientDataModel data)
	    {
			return this.Add(data, null);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public int Update(clientDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"UPDATE client SET  [classid] = @classid, [parentid] = @parentid, [childnumber] = @childnumber, [childcount] = @childcount, [serialnumber] = @serialnumber, [name] = @name, [pinyin] = @pinyin, [alias] = @alias, [address] = @address, [zipcode] = @zipcode, [linkman] = @linkman, [linktel] = @linktel, [linkaddress] = @linkaddress, [credits] = @credits, [pricemode] = @pricemode, [comment] = @comment, [status] = @status, [sort] = @sort, [modifydate] = @modifydate WHERE  [clientid] = @clientid ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@clientid", data.clientid),                 
                new SqlParameter("@classid", data.classid),                 
                new SqlParameter("@parentid", data.parentid),                 
                new SqlParameter("@childnumber", data.childnumber),                 
                new SqlParameter("@childcount", data.childcount),                 
                new SqlParameter("@serialnumber", data.serialnumber),                 
                new SqlParameter("@name", data.name),                 
                new SqlParameter("@pinyin", data.pinyin),                 
                new SqlParameter("@alias", data.alias),                 
                new SqlParameter("@address", data.address),                 
                new SqlParameter("@zipcode", data.zipcode),                 
                new SqlParameter("@linkman", data.linkman),                 
                new SqlParameter("@linktel", data.linktel),                 
                new SqlParameter("@linkaddress", data.linkaddress),                 
                new SqlParameter("@credits", data.credits),                 
                new SqlParameter("@pricemode", data.pricemode),                 
                new SqlParameter("@comment", data.comment),                 
                new SqlParameter("@status", data.status),                 
                new SqlParameter("@sort", data.sort),                 
                new SqlParameter("@modifydate", data.modifydate),                 
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public override int Update(clientDataModel data)
	    {
			return this.Update(data, null);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public int Delete(clientDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"DELETE FROM client WHERE  [clientid] = @clientid ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@clientid", data.clientid),                 
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public override int Delete(clientDataModel data)
	    {
			return this.Delete(data, null);
	    }
	    
	}
}
