//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using CPSS.Common.Core.DataAccess.DataAccess;
using CPSS.Data.DataAccess.Interfaces;
using CPSS.Data.DataAcess.DataModels;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// unit的数据访问层
    /// </summary>
	public partial class unitDataAccess : GenericDataAccessBase<unitDataModel>, IunitDataAccess
	{
		/// <summary>
		/// 构造函数
		/// </summary>
		public unitDataAccess(IDbConnection connection) : base(connection)
        {
        }

		/// <summary>
		/// 根据编号获取unit
		/// </summary>
		public unitDataModel GetunitDataModelById(int unitid)
		{
			this.ExecuteSQL = @"SELECT unitid,name,status,sort,modifydate From unit  WHERE  unitid = @unitid ";
			this.DataParameter = new DbParameter[]
			{
				new SqlParameter("@unitid", unitid),
			};
            return this.ExecuteReadSqlTounitDataModel();
		}

		/// <summary>
		/// 新增
		/// </summary>
		public int Add(unitDataModel data, IDbTransaction tansaction)
	    {
            this.ExecuteSQL = @"INSERT INTO [unit] ([name],[status],[sort],[modifydate]) VALUES (@name,@status,@sort,@modifydate) 
 SELECT SCOPE_IDENTITY()";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@name", data.name),
                new SqlParameter("@status", data.status),
                new SqlParameter("@sort", data.sort),
                new SqlParameter("@modifydate", data.modifydate),
            };
	        return this.ExecuteNonQuery(tansaction, false);
	    }

		/// <summary>
		/// 新增
		/// </summary>
		public override int Add(unitDataModel data)
	    {
			return this.Add(data, null);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public int Update(unitDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"UPDATE unit SET  [name] = @name, [status] = @status, [sort] = @sort, [modifydate] = @modifydate WHERE  [unitid] = @unitid ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@unitid", data.unitid),
                new SqlParameter("@name", data.name),
                new SqlParameter("@status", data.status),
                new SqlParameter("@sort", data.sort),
                new SqlParameter("@modifydate", data.modifydate),
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 修改
		/// </summary>
		public override int Update(unitDataModel data)
	    {
			return this.Update(data, null);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public int Delete(unitDataModel data, IDbTransaction tansaction)
	    {
			this.ExecuteSQL = @"DELETE FROM unit WHERE  [unitid] = @unitid ";
			this.DataParameter = new DbParameter[]
            {
                new SqlParameter("@unitid", data.unitid),
            };
	        return this.ExecuteNonQuery(tansaction);
	    }

		/// <summary>
		/// 删除
		/// </summary>
	    public override int Delete(unitDataModel data)
	    {
			return this.Delete(data, null);
	    }
	    
	}
}
