//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Collections.Generic;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// 手动映射DataReader到ClientsDataModel
    /// </summary>
    public partial class DataReaderToClientsDataModelMapper
    {
		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void Map(IDataReader dataReader, CPSS.Data.DataAcess.DataModels.ClientsDataModel entity)
	    {            
            entity.client_id = (int)dataReader["client_id"];
            entity.class_id = (string)dataReader["class_id"];
            entity.parent_id = (string)dataReader["parent_id"];
            entity.child_number = (int)dataReader["child_number"];
            entity.child_count = (int)dataReader["child_count"];
            entity.serial_number = (string)dataReader["serial_number"];
            entity.name = (string)dataReader["name"];
            entity.alias = (string)dataReader["alias"];
            entity.region_id = dataReader.IsDBNull(dataReader.GetOrdinal("region_id"))? null: (int?)dataReader["region_id"];
            entity.phone_number = (string)dataReader["phone_number"];
            entity.address = (string)dataReader["address"];
            entity.zipcode = (string)dataReader["zipcode"];
            entity.contact_personal = (string)dataReader["contact_personal"];
            entity.tax_number = (string)dataReader["tax_number"];
            entity.acount_number = (string)dataReader["acount_number"];
            entity.credit_total = dataReader.IsDBNull(dataReader.GetOrdinal("credit_total"))? null: (System.Nullable<System.Double>)dataReader["credit_total"];
            entity.pinyin = (string)dataReader["pinyin"];
            entity.pricemode = dataReader.IsDBNull(dataReader.GetOrdinal("pricemode"))? null: (System.Nullable<short>)dataReader["pricemode"];
            entity.sklimit = dataReader.IsDBNull(dataReader.GetOrdinal("sklimit"))? null: (System.Nullable<short>)dataReader["sklimit"];
            entity.artotal = dataReader.IsDBNull(dataReader.GetOrdinal("artotal"))? null: (System.Nullable<System.Double>)dataReader["artotal"];
            entity.artotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("artotal_ini"))? null: (System.Nullable<System.Double>)dataReader["artotal_ini"];
            entity.aptotal = dataReader.IsDBNull(dataReader.GetOrdinal("aptotal"))? null: (System.Nullable<System.Double>)dataReader["aptotal"];
            entity.aptotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("aptotal_ini"))? null: (System.Nullable<System.Double>)dataReader["aptotal_ini"];
            entity.pre_artotal = dataReader.IsDBNull(dataReader.GetOrdinal("pre_artotal"))? null: (System.Nullable<System.Double>)dataReader["pre_artotal"];
            entity.pre_artotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("pre_artotal_ini"))? null: (System.Nullable<System.Double>)dataReader["pre_artotal_ini"];
            entity.pre_aptotal = dataReader.IsDBNull(dataReader.GetOrdinal("pre_aptotal"))? null: (System.Nullable<System.Double>)dataReader["pre_aptotal"];
            entity.pre_aptotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("pre_aptotal_ini"))? null: (System.Nullable<System.Double>)dataReader["pre_aptotal_ini"];
            entity.firstcheck = dataReader.IsDBNull(dataReader.GetOrdinal("firstcheck"))? null: (System.Nullable<bool>)dataReader["firstcheck"];
            entity.comment = (string)dataReader["comment"];
            entity.csflag = (string)dataReader["csflag"];
            entity.deleted = dataReader.IsDBNull(dataReader.GetOrdinal("deleted"))? null: (System.Nullable<bool>)dataReader["deleted"];
            entity.ProtocolDate = dataReader.IsDBNull(dataReader.GetOrdinal("ProtocolDate"))? null: (DateTime?)dataReader["ProtocolDate"];
            entity.ModifyDate = (System.Byte[])dataReader["ModifyDate"];
            entity.GMPNo = (string)dataReader["GMPNo"];
            entity.GSPNo = (string)dataReader["GSPNo"];
            entity.Cetype = dataReader.IsDBNull(dataReader.GetOrdinal("Cetype"))? null: (System.Nullable<System.Byte>)dataReader["Cetype"];
            entity.property = (int)dataReader["property"];
            entity.comment1 = (string)dataReader["comment1"];
            entity.comment2 = (string)dataReader["comment2"];
            entity.comment3 = (string)dataReader["comment3"];
            entity.comment4 = (string)dataReader["comment4"];
            entity.comment5 = (string)dataReader["comment5"];
            entity.RowIndex = (int)dataReader["RowIndex"];
            entity.e_id = (int)dataReader["e_id"];
            entity.StopUse = dataReader.IsDBNull(dataReader.GetOrdinal("StopUse"))? null: (System.Nullable<bool>)dataReader["StopUse"];
            entity.incrate = (System.Decimal)dataReader["incrate"];
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public CPSS.Data.DataAcess.DataModels.ClientsDataModel Map(IDataReader dataReader)
	    {
			var result = new CPSS.Data.DataAcess.DataModels.ClientsDataModel();
            result.client_id = (int)dataReader["client_id"];
            result.class_id = (string)dataReader["class_id"];
            result.parent_id = (string)dataReader["parent_id"];
            result.child_number = (int)dataReader["child_number"];
            result.child_count = (int)dataReader["child_count"];
            result.serial_number = (string)dataReader["serial_number"];
            result.name = (string)dataReader["name"];
            result.alias = (string)dataReader["alias"];
			result.region_id = dataReader.IsDBNull(dataReader.GetOrdinal("region_id"))? null: (int?)dataReader["region_id"];
            result.phone_number = (string)dataReader["phone_number"];
            result.address = (string)dataReader["address"];
            result.zipcode = (string)dataReader["zipcode"];
            result.contact_personal = (string)dataReader["contact_personal"];
            result.tax_number = (string)dataReader["tax_number"];
            result.acount_number = (string)dataReader["acount_number"];
			result.credit_total = dataReader.IsDBNull(dataReader.GetOrdinal("credit_total"))? null: (System.Nullable<System.Double>)dataReader["credit_total"];
            result.pinyin = (string)dataReader["pinyin"];
			result.pricemode = dataReader.IsDBNull(dataReader.GetOrdinal("pricemode"))? null: (System.Nullable<short>)dataReader["pricemode"];
			result.sklimit = dataReader.IsDBNull(dataReader.GetOrdinal("sklimit"))? null: (System.Nullable<short>)dataReader["sklimit"];
			result.artotal = dataReader.IsDBNull(dataReader.GetOrdinal("artotal"))? null: (System.Nullable<System.Double>)dataReader["artotal"];
			result.artotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("artotal_ini"))? null: (System.Nullable<System.Double>)dataReader["artotal_ini"];
			result.aptotal = dataReader.IsDBNull(dataReader.GetOrdinal("aptotal"))? null: (System.Nullable<System.Double>)dataReader["aptotal"];
			result.aptotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("aptotal_ini"))? null: (System.Nullable<System.Double>)dataReader["aptotal_ini"];
			result.pre_artotal = dataReader.IsDBNull(dataReader.GetOrdinal("pre_artotal"))? null: (System.Nullable<System.Double>)dataReader["pre_artotal"];
			result.pre_artotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("pre_artotal_ini"))? null: (System.Nullable<System.Double>)dataReader["pre_artotal_ini"];
			result.pre_aptotal = dataReader.IsDBNull(dataReader.GetOrdinal("pre_aptotal"))? null: (System.Nullable<System.Double>)dataReader["pre_aptotal"];
			result.pre_aptotal_ini = dataReader.IsDBNull(dataReader.GetOrdinal("pre_aptotal_ini"))? null: (System.Nullable<System.Double>)dataReader["pre_aptotal_ini"];
			result.firstcheck = dataReader.IsDBNull(dataReader.GetOrdinal("firstcheck"))? null: (System.Nullable<bool>)dataReader["firstcheck"];
            result.comment = (string)dataReader["comment"];
            result.csflag = (string)dataReader["csflag"];
			result.deleted = dataReader.IsDBNull(dataReader.GetOrdinal("deleted"))? null: (System.Nullable<bool>)dataReader["deleted"];
			result.ProtocolDate = dataReader.IsDBNull(dataReader.GetOrdinal("ProtocolDate"))? null: (DateTime?)dataReader["ProtocolDate"];
            result.ModifyDate = (System.Byte[])dataReader["ModifyDate"];
            result.GMPNo = (string)dataReader["GMPNo"];
            result.GSPNo = (string)dataReader["GSPNo"];
			result.Cetype = dataReader.IsDBNull(dataReader.GetOrdinal("Cetype"))? null: (System.Nullable<System.Byte>)dataReader["Cetype"];
            result.property = (int)dataReader["property"];
            result.comment1 = (string)dataReader["comment1"];
            result.comment2 = (string)dataReader["comment2"];
            result.comment3 = (string)dataReader["comment3"];
            result.comment4 = (string)dataReader["comment4"];
            result.comment5 = (string)dataReader["comment5"];
            result.RowIndex = (int)dataReader["RowIndex"];
            result.e_id = (int)dataReader["e_id"];
			result.StopUse = dataReader.IsDBNull(dataReader.GetOrdinal("StopUse"))? null: (System.Nullable<bool>)dataReader["StopUse"];
            result.incrate = (System.Decimal)dataReader["incrate"];
			return result;
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void MapObject(IDataReader dataReader, object entity)
	    {
	        this.Map(dataReader, entity as CPSS.Data.DataAcess.DataModels.ClientsDataModel);
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public object MapObject(IDataReader dataReader)
	    {
	        return this.Map(dataReader);
	    }
	}
}
