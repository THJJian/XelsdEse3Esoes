//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Collections.Generic;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// 手动映射DataReader到CompanyDataModel
    /// </summary>
    public partial class DataReaderToCompanyDataModelMapper
    {
		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void Map(IDataReader dataReader, CPSS.Data.DataAcess.DataModels.CompanyDataModel entity)
	    {            
            entity.company_id = (int)dataReader["company_id"];
            entity.class_id = (string)dataReader["class_id"];
            entity.parent_id = (string)dataReader["parent_id"];
            entity.child_number = (int)dataReader["child_number"];
            entity.child_count = (int)dataReader["child_count"];
            entity.serial_number = (string)dataReader["serial_number"];
            entity.name = (string)dataReader["name"];
            entity.deleted = (bool)dataReader["deleted"];
            entity.bank = (string)dataReader["bank"];
            entity.opaddress = (string)dataReader["opaddress"];
            entity.communicateaddr = (string)dataReader["communicateaddr"];
            entity.postcode = (string)dataReader["postcode"];
            entity.tel = (string)dataReader["tel"];
            entity.manager = (string)dataReader["manager"];
            entity.email = (string)dataReader["email"];
            entity.comment = (string)dataReader["comment"];
            entity.StartUse = (bool)dataReader["StartUse"];
            entity.prefix = (string)dataReader["prefix"];
            entity.sklimit = (short)dataReader["sklimit"];
            entity.pricemode = (short)dataReader["pricemode"];
            entity.pinyin = (string)dataReader["pinyin"];
            entity.ModifyDate = (System.Byte[])dataReader["ModifyDate"];
            entity.RowIndex = (int)dataReader["RowIndex"];
            entity.Area_ID = dataReader.IsDBNull(dataReader.GetOrdinal("Area_ID"))? null: (int?)dataReader["Area_ID"];
            entity.businessStyle = dataReader.IsDBNull(dataReader.GetOrdinal("businessStyle"))? null: (int?)dataReader["businessStyle"];
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public CPSS.Data.DataAcess.DataModels.CompanyDataModel Map(IDataReader dataReader)
	    {
			var result = new CPSS.Data.DataAcess.DataModels.CompanyDataModel();
            result.company_id = (int)dataReader["company_id"];
            result.class_id = (string)dataReader["class_id"];
            result.parent_id = (string)dataReader["parent_id"];
            result.child_number = (int)dataReader["child_number"];
            result.child_count = (int)dataReader["child_count"];
            result.serial_number = (string)dataReader["serial_number"];
            result.name = (string)dataReader["name"];
            result.deleted = (bool)dataReader["deleted"];
            result.bank = (string)dataReader["bank"];
            result.opaddress = (string)dataReader["opaddress"];
            result.communicateaddr = (string)dataReader["communicateaddr"];
            result.postcode = (string)dataReader["postcode"];
            result.tel = (string)dataReader["tel"];
            result.manager = (string)dataReader["manager"];
            result.email = (string)dataReader["email"];
            result.comment = (string)dataReader["comment"];
            result.StartUse = (bool)dataReader["StartUse"];
            result.prefix = (string)dataReader["prefix"];
            result.sklimit = (short)dataReader["sklimit"];
            result.pricemode = (short)dataReader["pricemode"];
            result.pinyin = (string)dataReader["pinyin"];
            result.ModifyDate = (System.Byte[])dataReader["ModifyDate"];
            result.RowIndex = (int)dataReader["RowIndex"];
			result.Area_ID = dataReader.IsDBNull(dataReader.GetOrdinal("Area_ID"))? null: (int?)dataReader["Area_ID"];
			result.businessStyle = dataReader.IsDBNull(dataReader.GetOrdinal("businessStyle"))? null: (int?)dataReader["businessStyle"];
			return result;
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void MapObject(IDataReader dataReader, object entity)
	    {
	        this.Map(dataReader, entity as CPSS.Data.DataAcess.DataModels.CompanyDataModel);
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public object MapObject(IDataReader dataReader)
	    {
	        return this.Map(dataReader);
	    }
	}
}
