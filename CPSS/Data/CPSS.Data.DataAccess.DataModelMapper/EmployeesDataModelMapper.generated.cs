//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Collections.Generic;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// 手动映射DataReader到EmployeesDataModel
    /// </summary>
    public partial class DataReaderToEmployeesDataModelMapper
    {
		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void Map(IDataReader dataReader, CPSS.Data.DataAcess.DataModels.EmployeesDataModel entity)
	    {            
            entity.emp_id = (int)dataReader["emp_id"];
            entity.class_id = (string)dataReader["class_id"];
            entity.parent_id = (string)dataReader["parent_id"];
            entity.child_number = (int)dataReader["child_number"];
            entity.child_count = (int)dataReader["child_count"];
            entity.name = (string)dataReader["name"];
            entity.alias = (string)dataReader["alias"];
            entity.serial_number = (string)dataReader["serial_number"];
            entity.d_id = dataReader.IsDBNull(dataReader.GetOrdinal("d_id"))? null: (int?)dataReader["d_id"];
            entity.deleted = dataReader.IsDBNull(dataReader.GetOrdinal("deleted"))? null: (System.Nullable<bool>)dataReader["deleted"];
            entity.phone = (string)dataReader["phone"];
            entity.address = (string)dataReader["address"];
            entity.comment = (string)dataReader["comment"];
            entity.aplimit = dataReader.IsDBNull(dataReader.GetOrdinal("aplimit"))? null: (System.Nullable<System.Double>)dataReader["aplimit"];
            entity.arlimit = dataReader.IsDBNull(dataReader.GetOrdinal("arlimit"))? null: (System.Nullable<System.Double>)dataReader["arlimit"];
            entity.aptotal = dataReader.IsDBNull(dataReader.GetOrdinal("aptotal"))? null: (System.Nullable<System.Double>)dataReader["aptotal"];
            entity.artotal = dataReader.IsDBNull(dataReader.GetOrdinal("artotal"))? null: (System.Nullable<System.Double>)dataReader["artotal"];
            entity.discountlimit = dataReader.IsDBNull(dataReader.GetOrdinal("discountlimit"))? null: (System.Nullable<System.Decimal>)dataReader["discountlimit"];
            entity.ls = dataReader.IsDBNull(dataReader.GetOrdinal("ls"))? null: (System.Nullable<System.Decimal>)dataReader["ls"];
            entity.th = dataReader.IsDBNull(dataReader.GetOrdinal("th"))? null: (System.Nullable<System.Decimal>)dataReader["th"];
            entity.pinyin = (string)dataReader["pinyin"];
            entity.LowPrice = dataReader.IsDBNull(dataReader.GetOrdinal("LowPrice"))? null: (System.Nullable<System.Double>)dataReader["LowPrice"];
            entity.HighPrice = dataReader.IsDBNull(dataReader.GetOrdinal("HighPrice"))? null: (System.Nullable<System.Double>)dataReader["HighPrice"];
            entity.SNCount = dataReader.IsDBNull(dataReader.GetOrdinal("SNCount"))? null: (int?)dataReader["SNCount"];
            entity.GSPSNCount = dataReader.IsDBNull(dataReader.GetOrdinal("GSPSNCount"))? null: (int?)dataReader["GSPSNCount"];
            entity.ModifyDate = (System.Byte[])dataReader["ModifyDate"];
            entity.Study = (string)dataReader["Study"];
            entity.Duty = (string)dataReader["Duty"];
            entity.GraduateDate = dataReader.IsDBNull(dataReader.GetOrdinal("GraduateDate"))? null: (DateTime?)dataReader["GraduateDate"];
            entity.szWork = (string)dataReader["szWork"];
            entity.InDate = dataReader.IsDBNull(dataReader.GetOrdinal("InDate"))? null: (DateTime?)dataReader["InDate"];
            entity.Teach = (string)dataReader["Teach"];
            entity.deduct = dataReader.IsDBNull(dataReader.GetOrdinal("deduct"))? null: (System.Nullable<System.Double>)dataReader["deduct"];
            entity.lim = (System.Byte[])dataReader["lim"];
            entity.Tp_ID = (int)dataReader["Tp_ID"];
            entity.RowIndex = (int)dataReader["RowIndex"];
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public CPSS.Data.DataAcess.DataModels.EmployeesDataModel Map(IDataReader dataReader)
	    {
			var result = new CPSS.Data.DataAcess.DataModels.EmployeesDataModel();
            result.emp_id = (int)dataReader["emp_id"];
            result.class_id = (string)dataReader["class_id"];
            result.parent_id = (string)dataReader["parent_id"];
            result.child_number = (int)dataReader["child_number"];
            result.child_count = (int)dataReader["child_count"];
            result.name = (string)dataReader["name"];
            result.alias = (string)dataReader["alias"];
            result.serial_number = (string)dataReader["serial_number"];
			result.d_id = dataReader.IsDBNull(dataReader.GetOrdinal("d_id"))? null: (int?)dataReader["d_id"];
			result.deleted = dataReader.IsDBNull(dataReader.GetOrdinal("deleted"))? null: (System.Nullable<bool>)dataReader["deleted"];
            result.phone = (string)dataReader["phone"];
            result.address = (string)dataReader["address"];
            result.comment = (string)dataReader["comment"];
			result.aplimit = dataReader.IsDBNull(dataReader.GetOrdinal("aplimit"))? null: (System.Nullable<System.Double>)dataReader["aplimit"];
			result.arlimit = dataReader.IsDBNull(dataReader.GetOrdinal("arlimit"))? null: (System.Nullable<System.Double>)dataReader["arlimit"];
			result.aptotal = dataReader.IsDBNull(dataReader.GetOrdinal("aptotal"))? null: (System.Nullable<System.Double>)dataReader["aptotal"];
			result.artotal = dataReader.IsDBNull(dataReader.GetOrdinal("artotal"))? null: (System.Nullable<System.Double>)dataReader["artotal"];
			result.discountlimit = dataReader.IsDBNull(dataReader.GetOrdinal("discountlimit"))? null: (System.Nullable<System.Decimal>)dataReader["discountlimit"];
			result.ls = dataReader.IsDBNull(dataReader.GetOrdinal("ls"))? null: (System.Nullable<System.Decimal>)dataReader["ls"];
			result.th = dataReader.IsDBNull(dataReader.GetOrdinal("th"))? null: (System.Nullable<System.Decimal>)dataReader["th"];
            result.pinyin = (string)dataReader["pinyin"];
			result.LowPrice = dataReader.IsDBNull(dataReader.GetOrdinal("LowPrice"))? null: (System.Nullable<System.Double>)dataReader["LowPrice"];
			result.HighPrice = dataReader.IsDBNull(dataReader.GetOrdinal("HighPrice"))? null: (System.Nullable<System.Double>)dataReader["HighPrice"];
			result.SNCount = dataReader.IsDBNull(dataReader.GetOrdinal("SNCount"))? null: (int?)dataReader["SNCount"];
			result.GSPSNCount = dataReader.IsDBNull(dataReader.GetOrdinal("GSPSNCount"))? null: (int?)dataReader["GSPSNCount"];
            result.ModifyDate = (System.Byte[])dataReader["ModifyDate"];
            result.Study = (string)dataReader["Study"];
            result.Duty = (string)dataReader["Duty"];
			result.GraduateDate = dataReader.IsDBNull(dataReader.GetOrdinal("GraduateDate"))? null: (DateTime?)dataReader["GraduateDate"];
            result.szWork = (string)dataReader["szWork"];
			result.InDate = dataReader.IsDBNull(dataReader.GetOrdinal("InDate"))? null: (DateTime?)dataReader["InDate"];
            result.Teach = (string)dataReader["Teach"];
			result.deduct = dataReader.IsDBNull(dataReader.GetOrdinal("deduct"))? null: (System.Nullable<System.Double>)dataReader["deduct"];
            result.lim = (System.Byte[])dataReader["lim"];
            result.Tp_ID = (int)dataReader["Tp_ID"];
            result.RowIndex = (int)dataReader["RowIndex"];
			return result;
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void MapObject(IDataReader dataReader, object entity)
	    {
	        this.Map(dataReader, entity as CPSS.Data.DataAcess.DataModels.EmployeesDataModel);
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public object MapObject(IDataReader dataReader)
	    {
	        return this.Map(dataReader);
	    }
	}
}
