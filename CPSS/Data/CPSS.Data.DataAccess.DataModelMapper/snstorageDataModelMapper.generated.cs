//------------------------------------------------------------------------------
// <auto-generated>
//     此代码是根据模板生成的。
//
//     对此文件的更改可能会导致不正确的行为，如果
//     重新生成代码，则所做更改将丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Collections.Generic;

namespace CPSS.Data.DataAccess
{
	/// <summary>
    /// 手动映射DataReader到snstorageDataModel
    /// </summary>
    public partial class DataReaderTosnstorageDataModelMapper
    {
		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void Map(IDataReader dataReader, CPSS.Data.DataAcess.DataModels.snstorageDataModel entity)
	    {            
            entity.sn = (string)dataReader["sn"];
            entity.subcomid = (int)dataReader["subcomid"];
            entity.stoid = (int)dataReader["stoid"];
            entity.clientid = (int)dataReader["clientid"];
            entity.empid = (int)dataReader["empid"];
            entity.depid = (int)dataReader["depid"];
            entity.proid = (int)dataReader["proid"];
            entity.billtype = (int)dataReader["billtype"];
            entity.billid = (int)dataReader["billid"];
            entity.costprice = dataReader.IsDBNull(dataReader.GetOrdinal("costprice"))? null: (System.Nullable<System.Decimal>)dataReader["costprice"];
            entity.ctime = (DateTime)dataReader["ctime"];
            entity.makedate = dataReader.IsDBNull(dataReader.GetOrdinal("makedate"))? null: (DateTime?)dataReader["makedate"];
            entity.validdate = dataReader.IsDBNull(dataReader.GetOrdinal("validdate"))? null: (DateTime?)dataReader["validdate"];
            entity.modifydate = (System.Byte[])dataReader["modifydate"];
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public CPSS.Data.DataAcess.DataModels.snstorageDataModel Map(IDataReader dataReader)
	    {
			var result = new CPSS.Data.DataAcess.DataModels.snstorageDataModel();
            result.sn = (string)dataReader["sn"];
            result.subcomid = (int)dataReader["subcomid"];
            result.stoid = (int)dataReader["stoid"];
            result.clientid = (int)dataReader["clientid"];
            result.empid = (int)dataReader["empid"];
            result.depid = (int)dataReader["depid"];
            result.proid = (int)dataReader["proid"];
            result.billtype = (int)dataReader["billtype"];
            result.billid = (int)dataReader["billid"];
			result.costprice = dataReader.IsDBNull(dataReader.GetOrdinal("costprice"))? null: (System.Nullable<System.Decimal>)dataReader["costprice"];
            result.ctime = (DateTime)dataReader["ctime"];
			result.makedate = dataReader.IsDBNull(dataReader.GetOrdinal("makedate"))? null: (DateTime?)dataReader["makedate"];
			result.validdate = dataReader.IsDBNull(dataReader.GetOrdinal("validdate"))? null: (DateTime?)dataReader["validdate"];
            result.modifydate = (System.Byte[])dataReader["modifydate"];
			return result;
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <param name="entity"></param>
		public void MapObject(IDataReader dataReader, object entity)
	    {
	        this.Map(dataReader, entity as CPSS.Data.DataAcess.DataModels.snstorageDataModel);
	    }

		/// <summary>
        /// 映射
        /// </summary>
        /// <param name="dataReader"></param>
        /// <returns></returns>
	    public object MapObject(IDataReader dataReader)
	    {
	        return this.Map(dataReader);
	    }
	}
}
